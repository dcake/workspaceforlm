package com.thinkgem.jeesite.modules.agents.web;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.thinkgem.jeesite.common.entity.Agents;
import com.thinkgem.jeesite.common.entity.Users;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.utils.AjaxBeanUtil;
import com.thinkgem.jeesite.common.utils.CacheUtils;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.modules.agents.service.AgentsService;
import com.thinkgem.jeesite.modules.sys.entity.Dict;
import com.thinkgem.jeesite.modules.sys.utils.DictUtils;

/**
 * @description	经纪人管理
 * @author 文帅
 * @date 2017年8月11日 上午10:18:52
 */
@Controller
@RequestMapping(value ="${adminPath}/agents/agents")
public class AgentsController {
	/**
	 * @description	跳转到经纪人管理列表页面
	 * @author 文帅
	 * @date 2017年8月11日 上午10:20:51
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 */
	@Autowired
	private AgentsService agentsService;
	@RequestMapping(value ="list")
	public String list(Agents agents,HttpServletRequest request, HttpServletResponse response, Model model) {
		//从缓存里取字典列表   搜索内容
				Map<String, List<Dict>> dictMap = (Map<String, List<Dict>>)CacheUtils.get("dictMap");
					if (dictMap!=null){
						//审核状态
						model.addAttribute("agentsStatus", dictMap.get("driver_master_change_auditing_status"));
				}
				Page<Agents> page = agentsService.findPage(new Page<Agents>(request, response), agents); 
				//页面显示数据 非数据库字段字符串
				
				for(Agents a:page.getList()){
					//用户状态 0正常 1锁定 
					a.setUsersStatus(DictUtils.getDictLabel(a.getUsersStatus(),"users_status",a.getUsersStatus()));
					 //审核状态 0未审核 1已审核 2审核未通过
					a.setDriverMasterChangeAuditingStatus(DictUtils.getDictLabel(a.getDriverMasterChangeAuditingStatus(),"driver_master_change_auditing_status",a.getDriverMasterChangeAuditingStatus()));
				}
				model.addAttribute("agents", agents);
				model.addAttribute("page", page);
		
		return "modules/agent/agentsList";
	}
	
	/**
	 * @description	跳转到经纪人添加页面
	 * @author 文帅
	 * @date 2017年8月11日 上午10:55:40
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 */
	@RequestMapping(value ="goAddAgents")
	public String goAddAgents(Agents agents,HttpServletRequest request, HttpServletResponse response, Model model) {
		Map<String, List<Dict>> dictMap = (Map<String, List<Dict>>)CacheUtils.get("dictMap");
		if(dictMap!=null){
			//等级
			model.addAttribute("sys", dictMap.get("sys_office_grade"));
			model.addAttribute("status", dictMap.get("users_status"));
		}
		return "modules/agent/agentsAdd";
	}
	@RequestMapping(value = "saveDriver")
    @ResponseBody
    public AjaxBeanUtil  saveAgents(Users users, HttpServletRequest request, Model model, RedirectAttributes redirectAttributes) {
    	return agentsService.saveAgents(users, request);
    }
	
	/**
	 * @description	跳转到经纪人详情页面
	王涛
	 * @return
	 */
	@RequestMapping(value ="goAgentsDetail")
	public String goAgentsDetail(Agents agent,HttpServletRequest request, HttpServletResponse response, Model model) {
		Agents agents=agentsService.findAgentsId(agent.getId());
		Users  users=agentsService.findUserByUserId(agents.getUserid());
		DictUtils.getDictLabel(users.getUsersStatus(),"users_status",users.getUsersStatus());
		List<Dict> usersStatus=DictUtils.getDictList("users_status");
		List<Dict>truckType=DictUtils.getDictList("truck_type");
		model.addAttribute("usersStatus", usersStatus);
		model.addAttribute("users", users);
		model.addAttribute("truckType", truckType);
		model.addAttribute("agents", agents);
		return "modules/agent/agentsDetail";
	}
	
	/**
	 * @description	跳转到订单明细页面
	 * @author 文帅
	 * @date 2017年8月11日 上午11:29:10
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 */
	@RequestMapping(value ="goAgentsOrderList")
	public String goAgentsOrderList( Agents agents,HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<Agents> page = agentsService.findAgentOrderList(new Page<Agents>(request, response), agents); 
		for(Agents d:page.getList()){
				d.setGoodsType(DictUtils.getDictLabel(d.getGoodsType(),"goods_type",d.getGoodsType()));
		}	
		Map<String, List<Dict>> dictMap = (Map<String, List<Dict>>)CacheUtils.get("dictMap");
		if(dictMap!=null){
			//状态
			model.addAttribute("agentOrderWeituoOrFabu", dictMap.get("agent_order_weituo_or_fabu"));
		}
		model.addAttribute("agents", agents);	
		model.addAttribute("page", page);	
		return "modules/agent/agentsOrderList";
	}
	/**
	 * 锁定
	 */
	@RequestMapping(value="lock",method=RequestMethod.POST)
	@ResponseBody
	public AjaxBeanUtil lock(String id){
		return agentsService.lock(id);
	}
	/**
	 * 	解锁
	 * 
	 */
	@RequestMapping(value="clear",method=RequestMethod.POST)
	@ResponseBody
	public AjaxBeanUtil clear(String id){
		return agentsService.clear(id);
	}
	/**
	 * 根据Id查询订单详情
	 * 王涛
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "detailOrder")
	public String detailOrder( Agents agent,HttpServletRequest request, HttpServletResponse response, Model model) {
		Agents agents=agentsService.findByOrderId(agent.getId());
		agents.setGoodsType(DictUtils.getDictLabel(agents.getGoodsType(),"goods_type",agents.getGoodsType()));
		model.addAttribute("agents", agents);
		return "modules/agent/agentsDetailOrderList";
	}
	
	//上传图片
	@RequestMapping(value="/uploadImage",method=RequestMethod.POST)  
    public void uploadImgApp(Users  users ,@RequestParam(value="file",required=false) MultipartFile file,
    		@RequestParam(value="file1",required=false) MultipartFile file1,
    		@RequestParam(value="file2",required=false) MultipartFile file2,
    		@RequestParam(value="file3",required=false) MultipartFile file3,
    		@RequestParam(value="file4",required=false) MultipartFile file4,
    		HttpServletRequest request){
		Agents agent=agentsService.findByUserId(users.getId());
		try {
			//头像
			if(file!=null && StringUtils.isNotEmpty(file.getOriginalFilename())){
				String path=agentsService.fildUpload(file, request);
				users.setHeadImg(path);
			}
			//身份证正面
			if(file1!=null && StringUtils.isNotEmpty(file1.getOriginalFilename())){
				String path1=agentsService.fildUpload(file1, request);
				users.setCardFaceImg(path1);
			}
			//身份证反面
			if(file2!=null && StringUtils.isNotEmpty(file2.getOriginalFilename())){
				String path2=agentsService.fildUpload(file2, request);
				users.setCardOtherImg(path2);
			}
			agentsService.updateInfo(users);
			//企业性质
			if(file3!=null && StringUtils.isNotEmpty(file3.getOriginalFilename())){
				String path3=agentsService.fildUpload(file3, request);
				agent.setBusinessLicenseFaceImg(path3);
			}
			if(file4!=null && StringUtils.isNotEmpty(file4.getOriginalFilename())){
				String path4=agentsService.fildUpload(file4, request);
				agent.setBusinessLicenseOtherImg(path4);
			}
			
			agentsService.updateInfo1(agent);
		} catch (Exception e) {
			e.printStackTrace();
		}
    }
	/**
	 * 王涛
	 * 编辑经纪人链接
	 */
	@RequestMapping(value = "edit")
	public String edit( Agents agent,HttpServletRequest request, HttpServletResponse response, Model model) {
		Agents agents=agentsService.findAgentsId(agent.getId());
		Users  users=agentsService.findUserByUserId(agents.getUserid());
		DictUtils.getDictLabel(users.getUsersStatus(),"users_status",users.getUsersStatus());
		List<Dict> usersStatus=DictUtils.getDictList("users_status");
		List<Dict>truckType=DictUtils.getDictList("truck_type");
		model.addAttribute("usersStatus", usersStatus);
		model.addAttribute("users", users);
		model.addAttribute("truckType", truckType);
		model.addAttribute("agents", agents);
		return "modules/agent/editAgents";
	}
	@RequestMapping(value = "update")
    @ResponseBody
    public AjaxBeanUtil  update(Users us,HttpServletRequest request, Model model, RedirectAttributes redirectAttributes) {
    	return agentsService.update(us, request);
    }
}
